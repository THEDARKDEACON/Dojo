// generated from rosidl_adapter/resource/msg.idl.em
// with input from robot_interfaces/msg/SensorData.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Quaternion.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module robot_interfaces {
  module msg {
    @verbatim (language="comment", text=
      "Unified sensor data message")
    struct SensorData {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Encoder data")
      int32 left_encoder;

      int32 right_encoder;

      double left_velocity;

      double right_velocity;

      @verbatim (language="comment", text=
        "Ultrasonic sensor")
      double ultrasonic_distance;

      boolean ultrasonic_valid;

      @verbatim (language="comment", text=
        "IMU data (if available)")
      boolean imu_available;

      geometry_msgs::msg::Vector3 linear_acceleration;

      geometry_msgs::msg::Vector3 angular_velocity;

      geometry_msgs::msg::Quaternion orientation;

      @verbatim (language="comment", text=
        "Battery/power info")
      double battery_voltage;

      double current_draw;

      @verbatim (language="comment", text=
        "Temperature sensors")
      sequence<double> temperatures;

      sequence<string> temperature_labels;
    };
  };
};
